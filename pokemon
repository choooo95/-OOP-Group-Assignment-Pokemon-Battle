//pokemon
case class Stat ( hp: Int, def: Int, element: String )

abstract class Pokemon ( val name: String, var currentStat: Stat )

trait PokemonCharacteristics {
	val attack: Iterable[Attack]
	val baseStat: Stat
}

class Bulbasaur ( _name: String, _currentStat: Stat ) extends Pokemon ( _name, _currentStat )

object Bulbasaur extends PokemonCharacteristics {
	val attack = List(new Attack(Tackle, Growl, VineWhip))
	val baseStat = new Stat(100, 10, "Grass")
}


// attacks
abstract class Attack ( val name: String, var currentPp: Int ) 

trait AttackCharacteristics {
	val basePp: Int
}

abstract class DebuffAttack ( _name: String, _currentPp: Int ) extends Attack ( _name, _currentPp )

trait DebuffAttackCharacteristics extends AttackCharacteristics {
	val defDmg: Int
}

object DebuffAttack extends DebuffAttackCharacteristics {
	val defDmg = 2
}

abstract class ActiveAttack ( _name: String, _currentPp: Int, hpDmg: Int ) extends Attack ( _name, _currentPp )

trait ActiveAttackCharacteristics extends AttackCharacteristics {
	val minHpDmg: Int
	val maxHpDmg: Int
}

object ActiveAttack extends ActiveAttackCharacteristics {
	val minHpDmg = 20
	val maxHpDmg = 30
}

abstract class ElementalAttack ( _name: String, _currentPp: Int, _hpDmg: Int, element: String ) extends ActiveAttack ( _name, _currentPp, _hpDmg )

/* use polymorphism???
class Growl ( _name: String, _currentPp: Int ) extends DebuffAttack ( _name, _currentPp )

class TailWhip ( _name: String, _currentPp: Int ) extends DebuffAttack ( _name, _currentPp )

class Scratch ( _name: String, _currentPp: Int, hpDmg: Int ) extends ActiveAttack ( _name, _currentPp )

class Tackle ( _name: String, _currentPp: Int, hpDmg: Int ) extends ActiveAttack ( _name, _currentPp )

class Ember ( _name: String, _currentPp: Int, _hpDmg: Int ) extends ElementalAttack ( _name, _currentPp, _hpDmg )

class WaterGun ( _name: String, _currentPp: Int, _hpDmg: Int ) extends ElementalAttack ( _name, _currentPp, _hpDmg )

class VineWhip ( _name: String, _currentPp: Int, _hpDmg: Int ) extends ElementalAttack ( _name, _currentPp, _hpDmg )
*/
